- key: active_listening
  en:
    term: "active listening"
    def: >
      A discussion technique in which people summarize each other's statements
      in order to ensure they have understood them correctly.

- key: actual_result
  en:
    term: "actual result (of test)"
    def: >
      The value generated by running code in a test. If this matches the
      [expected result](#expected_result), the test passes; if the two are
      different, the test fails.

- key: adhd
  en:
    term: "attention-deficit/hyperactivity disorder"
    def: >
      A constellation of personality traits that include someone having
      difficulty controlling what they pay attention to and higher-than-average
      physical restlessness.
    acronym: ADHD

- key: agile
  en:
    term: "agile development"
    def: >
      An iterative approach to software development built around several
      short feedback loops rather than long-range planning.

- key: api_key
  en:
    term: "API key"
    def: >
      A unique identifier (usually randomly generated) used to authenticate a
      user or an application.  Most web services require client applications to
      provide an API key at the start of a session or for each transaction.

- key: auto_completion
  en:
    term: "auto-completion"
    def: >
      A technique implemented by many interactive text interfaces that completes a
      command, variable name, filename, or other text when the tab key is pressed.

- key: box_and_whisker_plot
  en:
    term: "box-and-whisker plot"
    def: >
      A plot that shows the [quartiles](#quartile) in a dataset using boxes
      and uses lines (whiskers) to show the range of outliers.

- key: build_manager
  en:
    term: "build manager"
    def: >
      A program that keeps track of how files depend on one another and runs commands
      to update any files that are out-of-date.

- key: byte_code
  en:
    term: "byte code"
    def: >
      A set of instructions designed to be executed efficiently by an
      [interpreter](#interpreter).

- key: branch_git
  en:
    term: "branch"
    def: >
      A snapshot of a version of a [repository](#repository).  Multiple branches
      can capture multiple versions of the same repository.

- key: centralized_system
  ref:
  - decentralized_system
  en:
    term: "centralized system"
    def: >
      A system in which components communicate with or are controlled by a
      single coordinating component.  Centralized systems are easy to build but
      difficult to scale, and the central component gives them a single point of
      failure.

- key: clone_git
  en:
    term: "clone"
    def: >
      A copy of a [repository](#repository) or the act of making a copy of a
      repository.

- key: code_browser
  en:
    term: "code browser"
    def: >
      A tool for navigating code more quickly than is possible in a conventional
      text editor.  Code browsers typically include the ability to jump to the
      definition of a class or to references to a variable.

- key: code_review
  en:
    term: "code review"
    def: >
      The act of reading source code to find errors, design flaws, opportunities
      for [refactoring](#refactoring), and style violations, or simply to learn
      from it.

- key: commit
  en:
    term: "commit"
    def: >
      The act of saving a set of changes to a database or version control
      [repository](#repository), or the changes saved.

- key: commit_message
  en:
    term: "commit message"
    def: >
      A comment attached to a [commit](#commit) that explains what was done and
      why.

- key: community_of_practice
  en:
    term: "community of practice"
    def: >
      A group of people working together on something who assist and mentor each
      other.

- key: compiled_language
  en:
    term: "compiled language"
    def: >
      Originally, a language such as C or Fortran that is translated into machine
      instructions for execution. Languages such as Java are also compiled before
      execution, but into [byte code](#byte_code) instead of machine instructions,
      while [interpreted languages](#interpreted_language) like Python are
      compiled to byte code on the fly.

- key: conflict_git
  en:
    term: "conflict"
    def: >
      A situation in which incompatible or overlapping changes have been made on
      different [branches](#branch_git) that are now being [merged](#merge_git).

- key: console
  en:
    term: "console"
    def: >
      An interactive pane in an [IDE](#ide) where users can evaluate expressions
      or issue commands.

- key: crunch_mode
  en:
    term: "crunch mode"
    def: >
      To work long hours with little sleep under deadline pressure.  It
      inevitably makes matters worse, since the time needed to fix mistakes
      is greater than the number of extra hours worked.

- key: curly_brace_language
  en:
    term: "curly-brace language"
    def: >
      A language that uses the same syntactic conventions as C, typically
      including `{...}` to show code blocks and update operators like `+=`.

- key: decentralized_system
  en:
    term: "decentralized system"
    def: >
      A system that doesn't have a single controller or central authority like a
      [centralized system](#centralized_system).  Decentralized systems are more
      robust and more scalable, but harder to build.

- key: decision_meeting
  en:
    term: "decision meeting"
    def: >
      A meeting whose purpose is to make binding decisions.  The term is used in
      contrast with [discussion meeting](#discussion_meeting).

- key: discoverability
  en:
    term: "discoverability"
    def: >
      The ease with which something can be found or stumbled upon.

- key: discussion_meeting
  en:
    term: "discussion meetings"
    def: >
      A meeting whose purpose is to share ideas or explore design alternatives.
      The term is used in contrast with [decision meeting](#decision_meeting).

- key: doc_comment
  en:
    term: "doc comment"
    def: >
      A specially-formatted comment containing documentation about a piece of
      code that is embedded in the code itself.

- key: doc_generator
  en:
    term: "documentation generator"
    def: >
      A software tool that extracts specially-formatted comments or
      [dostrings](#docstring) from code and generates cross-referenced developer
      documentation.

- key: docstring
  en:
    term: "docstring"
    def: >
      Short for "documentation string", a string appearing at the start of a
      module, class, or function in Python that automatically becomes that
      object's documentation.

- key: dynamic_analysis
  ref:
  - static_analysis
  en:
    term: "dynamic analysis"
    def: >
      To analyze the state of a running program in order to determine its
      general properties and/or to find bugs.

- key: dynamic_typing
  en:
    term: "dynamic typing"
    def: >
      Checking the types of values as the program is running.  The term is used
      in contrast with [static typing](#static_typing).

- key: effort_importance_grid
  en:
    term: "effort-importance grid"
    def: >
      A project planning tool that classifies work items according to how much
      effort they will require and how important they are.

- key: environment
  en:
    term: "environment"
    def: >
      The set of configuration values used by a running program,
      including its [search path](#search_path),
      the values of [environment variables](#environment_variable),
      and so on.

- key: environment_variable
  en:
    term: "environment variable"
    def: >
      A variable used by the operating system
      such as the path to the current user's home directory.

- key: expected_result
  ref:
    - actual_result
  en:
    term: "expected result (of test)"
    def: >
      The value that a piece of software is supposed to produce when tested in a
      certain way, or the state in which it is supposed to leave the system.

- key: feigning_surprise
  en:
    term: "feigning surprise"
    def: >
      To pretend to be surprised, as in, "Oh, I thought *everyone* knew about X."
      It isn't always intended to belittle the listener, but it usually has that
      effect.

- key: fixture
  en:
    term: "fixture"
    def: >
      The thing on which a test is run.

- key: flow
  en:
    term: "flow"
    def: >
      A mental state in which someone feels completely immersed in a task.

- key: governance
  en:
    term: "governance"
    def: >
      The process of governing, or the set of rules by which something is
      governed.  The governance of a software project establishes who is allowed
      to make what decisions and how.

- key: hitchhiker
  en:
    term: "hitchhiker"
    def: >
      Someone who takes credit for a project without actually doing their share
      of the work.

- key: ide
  en:
    term: "Integrated Development Environment"
    def: >
      An application that helps programmers develop software. IDEs typically have
      a built-in editor, a [console](#console) to execute code immediately, and
      browsers for exploring data structures in memory and files on disk.
    acronym: IDE

- key: interpreted_language
  en:
    term: interpreted language
    def: >
      A high-level language that is not executed directly by the computer, but
      instead is run by an [interpreter](#interpreter) that translates program
      instructions into machine commands on the fly.

- key: interpreter
  en:
    term: interpreter
    def: >
      A program whose job it is to run programs written in a high-level
      [interpreted language](#interpreted_language). Interpreters can run
      interactively, but may also execute commands saved in a file.

- key: interruption_bingo
  en:
    term: "interruption bingo"
    def: >
      A technique for ensuring fairness in meetings.
      Each time one person interrupts another a tally mark
      is added to a running total.

- key: issue_label
  en:
    term: "label (an issue)"
    def: >
      A short tag associated with an issue to categorize it. Common labels
      include `bug` and `feature request`.

- key: issue_tracker
  en:
    term: "issue tracker"
    def: >
      An application that manages a list of issues related to one or more
      projects.  Issues represent things such as bug reports and feature
      requests; they may be in several states (such as "verified" or "under
      development"), and they may or may not be assigned to specific people.

- key: jitter
  en:
    term: "jitter"
    def: >
      To displace the points in a plot slightly at random to make clusters easier to see.

- key: linter
  en:
    term: "linter"
    def: >
      Another term for a [style checker](#style_checker).  The name comes from
      an early tool called `lint` that looked for problems in C programs.

- key: lpp
  en:
    term: legitimate peripheral participation
    def: >
      Doing small tasks that a [community of practice](#community_of_practice)
      regards as valuable in order to gradually become a member of that
      community.

- key: mail_filter
  en:
    term: mail filter
    def: >
      Software that classifies email messages and/or automatically places them
      in specific folders based on origin or content.

- key: marthas_rules
  en:
    term: "Martha's Rules"
    def: >
      A simple set of rules for making decisions in small groups.

- key: median
  en:
    term: "median"
    def: >
      The middle value in a dataset.

- key: mental_model
  en:
    term: "mental model"
    def: >
      A simplified representation of the key elements and relationships of some
      problem domain that is good enough to support problem solving.

- key: merge_git
  en:
    term: "merge"
    def: >
      To combine changes from two [branches](#branch_git) in a
      [repository](#repository). This may lead to [conflicts](#conflict_git).

- key: milestone
  en:
    term: "milestone"
    def: >
      A target that a project is trying to meet, often represented as a set of
      issues that all have to be resolved by a certain time.

- key: neurodivergent
  en:
    term: "neurodivergent"
    def: >
      Someone whose brain works differently from the average when it comes to
      sociability, learning, attention, and mood. The term is used in contrast
      with [neurotypical](#neurotypical).

- key: neurotypical
  en:
    term: "neurotypical"
    def: >
      Someone near the middle of the bell curve with respect to sociability,
      learning, attention, and mood. The term is used in contrast with
      [neurodivergent](#neurodivergent).

- key: package_manager
  en:
    term: "package manager"
    def: >
      A program that keeps track of the software packages installed on a
      computer and their dependencies on one another.  Most languages have their
      own package manager, which complicates multi-lingual projects.

- key: pattern_rule
  en:
    term: "pattern rule"
    def: >
      A generic rule for a [build manager](#build_manager) that describes how to
      update any file whose name matches a pattern.

- key: percentile
  en:
    term: "percentile"
    def: >
       A value showing the percentage of a distribution that is equal to or below it.

- key: peripheral_awareness
  en:
    term: "peripheral awareness"
    def:
      In psychology, awareness of things that are not directly in the field of view;
      in a project, a general awareness of what other people are doing.

- key: plugin
  en:
    term: "plugin"
    def: >
      An optional add-on module for a program or library that provides
      extra functionality.  Plugins are typically distributed separately from
      the main application.

- key: pull_git
  en:
    term: "pull"
    def: >
      To down changes from a remote [repository](#repository) to a local one.

- key: push_git
  en:
    term: "push"
    def: >
      To upload changes from a local [repository](#repository) to a remote one.

- key: quartile
  en:
    term: "quartile"
    def: >
       One of the [percentiles](#percentile) that divides a dataset into four equal parts.

- key: refactoring
  en:
    term: "refactoring"
    def: >
      Reorganizing software without changing its behavior.

- key: regression
  en:
    term: "regression"
    def: >
      A situation in which something that used to work correctly no longer does.

- key: remote_git
  en:
    term: "remote"
    def: >
      A [repository](#repository) located on another computer, or a bookmark
      in one project that points at such a repository.

- key: repository
  en:
    term: "repository"
    def: >
      A place where a version control system stores the files that make up a
      project and the metadata that describes their history.

- key: reprex
  en:
    term: "reproducible example (reprex)"
    def: >
      A small, self-contained example of a problem.

- key: search_path
  en:
    term: "search path"
    def: >
      A list of directories that a program searches to find things,
      such as programs to run or libraries to load.

- key: sense_vote
  en:
    term: "sense vote"
    def: >
      A preliminary vote used to determine whether further discussion is needed in a meeting.

- key: software_portal
  en:
    term: "software portal"
    def: >
      A web-based application for coordinating work on software projects.
      Portals such as [Bitbucket][bitbucket], [GitHub][github], and
      [GitLab][gitlab] provide [issue trackers](#issue_tracker) and host
      version control [repositories](#repository).

- key: static_analysis
  ref:
  - dynamic_analysis
  en:
    term: "static analysis"
    def: >
      To analyze the source code of a program in order to determine its general
      properties and/or to find bugs.

- key: static_site_generator
  en:
    term: "static site generator"
    def: >
      A program that creates HTML pages from templates and content.

- key: static_typing
  en:
    term: "static typing"
    def: >
      Checking the types of values before a program runs to ensure that they
      will be valid.  The term is used in contrast with [dynamic
      typing](#dynamic_typing).

- key: stand_up_meeting
  en:
    term: "standup meeting"
    def: >
      Another term for [status meeting](#status_meeting).

- key: status_meeting
  en:
    term: "status meeting"
    def: >
      A brief status meeting in which project members report what they've done,
      what they're planning to do, and what's in their way.  Stand-up meetings
      are a common practice in [agile](#agile) development.

- key: style_checker
  en:
    term: "style checker"
    def: >
      See [linter](#linter).

- key: technical_debt
  en:
    term: "technical debt"
    def: >
      The additional work that has piled up because of earlier design
      compromises, changing circumstances, and/or bugs that have not yet been
      addressed.

- key: test_runner
  en:
    term: "test runner"
    def: >
      A program that finds and runs software tests and reports their results.

- key: test_suite
  en:
    term: "test suite"
    def: >
      A set of related [unit tests](#unit_test), usually stored in files that
      follow a prescribed naming convention.

- key: three_sticky_notes
  en:
    term: "three sticky notes"
    def: >
      A technique for ensuring fairness in meetings.
      Each time someone speaks, they must give up one of a set of tokens.
      When they are out of tokens,
      they cannot speak until everyone has used at least one.

- key: timestamp
  en:
    term: "timestamp"
    def: >
      A digital identifier showing the time at which something was created or
      accessed.

- key: unit_test
  en:
    term: "unit test"
    def: >
      A test that exercises one function or feature of a piece of software and
      produces pass, fail, or error.

- key: utc
  en:
    term: "Coordinated Universal Time"
    def: >
      The standard time against which all others are defined. UTC is the time at
      longitude 0°, and is not adjusted for daylight savings.
      [Timestamps](#timestamp) are often reported in UTC so that they will be
      the same no matter what timezone the computer is in.
    acronym: UTC

- key: virtual_environment
  en:
    term: virtual environment
    def: >
      A runtime environment created by modifying a program's [search path](#search_path)
      to find particular installed packages.

- key: virtual_machine
  en:
    term: virtual machine
    def: >
      A program that pretends to be a computer. This may seem a bit redundant,
      but VMs are quick to create and start up, and changes made inside the
      virtual machine are contained within that VM so we can install new
      packages or run a completely different operating system without affecting
      the underlying computer.
    acronym: VM

- key: wysiwyg
  en:
    term: "What You See Is What You Get"
    def: >
      Describes an interface that displays exactly what the finished product
      will look like.  A text editor showing HTML markup is not WYSIWYG; a
      graphical text editor like Microsoft Word is.
    acronym: WYSIWYG
